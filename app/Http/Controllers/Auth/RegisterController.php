<?phpnamespace App\Http\Controllers\Auth;use App\Http\Controllers\Controller;use App\Http\Requests\Auth\LoginRequest;use App\Providers\RouteServiceProvider;use Illuminate\Http\Request;use Illuminate\Support\Facades\Auth;use Tymon\JWTAuth\Facades\JWTAuth;use Tymon\JWTAuth\Exceptions\JWTException;use App\Models\User;use Illuminate\Support\Facades\Validator;use Illuminate\Support\Facades\Hash;class RegisterController extends Controller{   public function view(){       return view('auth.register');   }      public function register(Request $request){      $validator = Validator::make($request->all(), [            'name' => 'required|max:255',            'email_address' => 'required|unique:users,email|email:rfc,dns',            'new_password' => 'required|confirmed',            "company_name" => 'required',            "company_address"=> "required",            "logo" => "nullable|image",            "termConditions" => 'required'        ]);        // dd($validator->messages());        if ($validator->fails()) {            // return back()            //     ->withErrors($validator)            //     ->withInput();                        return back()            ->withErrors($validator)            ->withInput()            ->with('tab', 'signup');        }                   try {            // dd($request->termConditions);            // Create User            $user = new User;            $name = explode(" ", $request->name);            $user->first_name = $name[0];            $user->last_name = $name[1] ?? null;            $user->role_id = 3;             $user->email = $request->email_address;            $user->is_approved = true;            $user->company_name = $request->company_name;            $user->company_address = $request->company_address;            $user->password = Hash::make($request->new_password);            if($request->termConditions){                $user->agreed_terms = '1';            }                if ($request->logo) {                $image = $request->logo;                $imageName = time() . '_' . $image->getClientOriginalName();                $destinationPath = public_path('/assets/company_logo');                $image->move($destinationPath, $imageName);                $imageUrl = 'https://admin.famoryapp.com/assets/company_logo/' . $imageName;                $user->company_logo = $imageUrl;            }            $user->save();                        return back()->with('success', 'Registration Successful');        } catch (\Exception $e) {            return response()->json(['message' => $e->getMessage(), 'status' => 'failed', 'data' => []], 500);        }   }}