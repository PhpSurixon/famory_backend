<?phpnamespace App\Http\Middleware;use Closure;use Illuminate\Support\Facades\Auth;use App\Models\BlockUser;class CheckBlocked{    /**     * Handle an incoming request.     *     * @param  \Illuminate\Http\Request  $request     * @param  \Closure  $next     * @return mixed     */    public function handleOLD($request, Closure $next)    {        $currentUserId = auth()->user()->id;            $blockedUserIds = BlockUser::where('user_id', $currentUserId)->where('block', true)->pluck('marked_user_id')->toArray();            $request->attributes->set('blocked_user_ids', $blockedUserIds);            return $next($request);    }    public function handle($request, Closure $next)    {        $authId = Auth::id();        $blockedUserIds = BlockUser::where('user_id', $authId)                                    ->where('block', 1)                                    ->pluck('marked_user_id')                                    ->toArray();        $blockedByOther = BlockUser::where('marked_user_id', $authId)                                    ->where('block', 1)                                    ->pluck('user_id')                                    ->toArray();        $allBlocked = array_merge($blockedUserIds, $blockedByOther);        $request->attributes->set('blocked_user_ids', $allBlocked);        return $next($request);    }}